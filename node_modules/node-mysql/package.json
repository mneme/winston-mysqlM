{
  "name": "node-mysql",
  "description": "A wrapper of node.js mysql package to make it a bit easier to use.",
  "main": "./lib/node-mysql",
  "author": {
    "name": "Chiyan Chen"
  },
  "version": "0.1.4",
  "repository": {
    "type": "git",
    "url": "https://github.com/redblaze/node-mysql.git"
  },
  "bugs": {
    "url": "https://github.com/redblaze/node-mysql/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/redblaze/node-mysql/raw/master/LICENSE"
    }
  ],
  "jam": {
    "main": "lib/node-mysql.js",
    "include": [
      "lib/node-mysql.js",
      "README.md",
      "LICENSE"
    ]
  },
  "dependencies": {
    "better-js-class": "*",
    "cps": "*",
    "mysql": "*",
    "underscore": "*"
  },
  "readme": "# node-mysql\n\nA wrapper of the node.js mysql package to make it a bit easier to use.\n\n## Install\n\n```text\nnpm install node-mysql\n```\n\n### Dependencies\n\n```json\n    \"dependencies\": {\n        \"better-js-class\": \"*\",\n        \"cps\": \"*\",\n        \"mysql\": \"*\",\n        \"underscore\": \"*\"\n    }\n```\n\n## API Document\n\n### Use\n\n```javascript\nvar db = require('node-mysql');\nvar DB = db.DB;\nvar BaseRow = db.Row;\nvar BaseTable = db.Table;\n```\n\n### DB Class\n\n__Example__\n\n```javascript\nvar box = new DB({\n    host     : 'localhost',\n    user     : 'root',\n    password : '',\n    database : 'prod_clone'\n});\n\nvar basicTest = function(cb) {\n    box.connect(function(conn, cb) {\n        cps.seq([\n            function(_, cb) {\n                conn.query('select * from users limit 1', cb);\n            },\n            function(res, cb) {\n                console.log(res);\n                cb();\n            }\n        ], cb);\n    }, cb);\n};\n```\n### Row and Table\n\n__Example__\n\nHere's a sample Model class.\n\n```javascript\nvar dw = new db.DB({\n    host     : 'localhost',\n    user     : 'root',\n    password : '',\n    database : 'data_warehouse_dev'\n});\n\nvar Model = function() {\n    var cls = {\n    };\n\n    var Row = Class(db.Row, {\n        _init: function(data) {\n            this.parent._init.call(this, data, {\n                table: Table\n            });\n        }\n    });\n\n    var TableClass = Class(db.Table, {\n    });\n\n    var Table = new TableClass({\n        'name': 'subscription_initiation',\n        'idFieldName': 'id',\n        'rowClass': Row,\n        'db': dw\n    });\n\n    $U.extend(cls, {\n        Row: Row,\n        Table: Table\n    });\n\n    return cls;\n}();\n```\n\nHere's an example calling APIs on the model:\n\n```javascript\nvar findAndUpdateTest = function(cb) {\n    dw.connect(function(conn, cb) {\n        var o;\n        cps.seq([\n            function(_, cb) {\n                var q = Model.Table.baseQuery() + DB.format('limit ?', [1]);\n                Model.Table.find(conn, q, cb);\n            },\n            function(res, cb) {\n                o = res[0];\n                var dto = {\n                    'subscription_status': 'active'\n                };\n                o.update(conn, dto, cb);\n            },\n            function(res, cb) {\n                console.log(res);\n                cb();\n            }\n        ], cb);\n    }, cb);\n};\n```\n\nHere's an example of creating a row:\n\n```javascript\nvar createTest = function(cb) {\n    dw.connect(function(conn, cb) {\n        cps.seq([\n            function(_, cb) {\n                Model.Table.create(conn, getSampleDto(), cb);\n            },\n            function(res, cb) {\n                console.log(res);\n                cb();\n            }\n        ], cb);\n    }, cb);\n};\n```\n\nHere's an example of using transactions:\n\n```javascript\nvar txnTest = function(cb) {\n    var conn;\n    dw.connect(function(conn, cb) {\n        dw.transaction(conn, function(conn, cb) {\n            cps.seq([\n                function(_, cb) {\n                    Model.Table.create(conn, getSampleDto(), cb);\n                },\n                function(_, cb) {\n                    dw.transaction(conn, function(conn, cb) {\n                        console.log(conn.__transaction__)\n                        Model.Table.create(conn, getSampleDto(), cb);\n                    }, cb);\n                },\n                function(_, cb) {\n                    throw new Error('foobar');\n                    // cb(null,'ok');\n                }\n            ], cb);\n        }, cb);\n    }, cb);\n};\n```\n\n",
  "readmeFilename": "README.md",
  "_id": "node-mysql@0.1.4",
  "dist": {
    "shasum": "8b095d08c28829ea5086a71001579d77f4f107a6"
  },
  "_from": "node-mysql@",
  "_resolved": "https://registry.npmjs.org/node-mysql/-/node-mysql-0.1.4.tgz"
}
